//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMFX.cTraderSetup.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DMFX.cTraderSetup.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string BrokersTitle {
            get {
                return ResourceManager.GetString("BrokersTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] cTrader_274570A67AD55CE71EB0627146FC8CC772E5EDC6 {
            get {
                object obj = ResourceManager.GetObject("cTrader_274570A67AD55CE71EB0627146FC8CC772E5EDC6", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End User License Agreement - Terms Of User
        ///Before using DarkMindFx indicators packages on any platform you must accept the license agreement as a part of the setup process. The license is as follows, and should be perused.
        ///
        ///License
        ///
        ///DarkMindFx provides a free for use package of the indicators (&quot;Package&quot;), it can be use in any environment including (but not limited to) personal, academic, commercial, government, business, non-profit, and for-profit. &quot;Free&quot; in the preceding sentence means that there is n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DMFX_cTrader_License {
            get {
                return ResourceManager.GetString("DMFX_cTrader_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Completed.
        /// </summary>
        internal static string DoneTitle {
            get {
                return ResourceManager.GetString("DoneTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oops! There was an error during the installation. The package was not installed..
        /// </summary>
        internal static string InstallationFailTxt {
            get {
                return ResourceManager.GetString("InstallationFailTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! Now you&apos;ve got the indicators package installed. You can open you cTrader/cAlgo terminal and start using it!.
        /// </summary>
        internal static string InstallOKTxt {
            get {
                return ResourceManager.GetString("InstallOKTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terms of Use.
        /// </summary>
        internal static string LicenseAggrTitle {
            get {
                return ResourceManager.GetString("LicenseAggrTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version: {0}.
        /// </summary>
        internal static string PackageVersionTxt {
            get {
                return ResourceManager.GetString("PackageVersionTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation.
        /// </summary>
        internal static string ProgressTitle {
            get {
                return ResourceManager.GetString("ProgressTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2017.11.20.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DarkMindFX Indicators Package.
        /// </summary>
        internal static string WelcomeTitle {
            get {
                return ResourceManager.GetString("WelcomeTitle", resourceCulture);
            }
        }
    }
}
